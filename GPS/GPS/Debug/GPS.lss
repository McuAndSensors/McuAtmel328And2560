
GPS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000064  00800100  00800100  0000025a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000025a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003b01  00000000  00000000  000004b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f4b  00000000  00000000  00003fb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011dc  00000000  00000000  00004f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  000060dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e32  00000000  00000000  00006744  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002dbd  00000000  00000000  00007576  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000a333  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__ctors_end>
   4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  10:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  14:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  18:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  1c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  20:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  24:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  28:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  2c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  30:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  34:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  38:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  3c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  40:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  44:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  48:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  4c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  50:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  54:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  58:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  5c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  60:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>

00000068 <__ctors_start>:
  68:	60 00       	.word	0x0060	; ????
  6a:	81 00       	.word	0x0081	; ????

0000006c <__ctors_end>:
  6c:	11 24       	eor	r1, r1
  6e:	1f be       	out	0x3f, r1	; 63
  70:	cf ef       	ldi	r28, 0xFF	; 255
  72:	d8 e0       	ldi	r29, 0x08	; 8
  74:	de bf       	out	0x3e, r29	; 62
  76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
  78:	11 e0       	ldi	r17, 0x01	; 1
  7a:	a0 e0       	ldi	r26, 0x00	; 0
  7c:	b1 e0       	ldi	r27, 0x01	; 1
  7e:	e6 ee       	ldi	r30, 0xE6	; 230
  80:	f1 e0       	ldi	r31, 0x01	; 1
  82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
  84:	05 90       	lpm	r0, Z+
  86:	0d 92       	st	X+, r0
  88:	a0 30       	cpi	r26, 0x00	; 0
  8a:	b1 07       	cpc	r27, r17
  8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
  8e:	21 e0       	ldi	r18, 0x01	; 1
  90:	a0 e0       	ldi	r26, 0x00	; 0
  92:	b1 e0       	ldi	r27, 0x01	; 1
  94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
  96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
  98:	a4 36       	cpi	r26, 0x64	; 100
  9a:	b2 07       	cpc	r27, r18
  9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>

0000009e <__do_global_ctors>:
  9e:	10 e0       	ldi	r17, 0x00	; 0
  a0:	c6 e3       	ldi	r28, 0x36	; 54
  a2:	d0 e0       	ldi	r29, 0x00	; 0
  a4:	04 c0       	rjmp	.+8      	; 0xae <__do_global_ctors+0x10>
  a6:	21 97       	sbiw	r28, 0x01	; 1
  a8:	fe 01       	movw	r30, r28
  aa:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <__tablejump2__>
  ae:	c4 33       	cpi	r28, 0x34	; 52
  b0:	d1 07       	cpc	r29, r17
  b2:	c9 f7       	brne	.-14     	; 0xa6 <__do_global_ctors+0x8>
  b4:	0e 94 88 00 	call	0x110	; 0x110 <main>
  b8:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <_exit>

000000bc <__bad_interrupt>:
  bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c0 <_GLOBAL__sub_I_UartGps>:
#include <util/delay.h>
#include <string.h>
#include <math.h>
#include "Gps.h"
#include "UART.h"
Uart UartGps;
  c0:	60 e8       	ldi	r22, 0x80	; 128
  c2:	75 e2       	ldi	r23, 0x25	; 37
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	91 e0       	ldi	r25, 0x01	; 1
  c8:	0e 94 c6 00 	call	0x18c	; 0x18c <_ZN4UartC1E8BaudRate>
  cc:	08 95       	ret

000000ce <_ZN17MovedFromLocationC1Ev>:
				return 0;
			}
		
		}
		return 0;
  ce:	fc 01       	movw	r30, r24
  d0:	e4 5f       	subi	r30, 0xF4	; 244
  d2:	fe 4f       	sbci	r31, 0xFE	; 254
  d4:	11 82       	std	Z+1, r1	; 0x01
  d6:	10 82       	st	Z, r1
  d8:	ec 59       	subi	r30, 0x9C	; 156
  da:	f1 09       	sbc	r31, r1
  dc:	11 82       	std	Z+1, r1	; 0x01
  de:	10 82       	st	Z, r1
  e0:	32 97       	sbiw	r30, 0x02	; 2
  e2:	11 82       	std	Z+1, r1	; 0x01
  e4:	10 82       	st	Z, r1
  e6:	32 97       	sbiw	r30, 0x02	; 2
  e8:	11 82       	std	Z+1, r1	; 0x01
  ea:	10 82       	st	Z, r1
  ec:	34 97       	sbiw	r30, 0x04	; 4
  ee:	10 82       	st	Z, r1
  f0:	11 82       	std	Z+1, r1	; 0x01
  f2:	12 82       	std	Z+2, r1	; 0x02
  f4:	13 82       	std	Z+3, r1	; 0x03
  f6:	34 97       	sbiw	r30, 0x04	; 4
  f8:	10 82       	st	Z, r1
  fa:	11 82       	std	Z+1, r1	; 0x01
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	13 82       	std	Z+3, r1	; 0x03
 100:	08 95       	ret

00000102 <_GLOBAL__sub_I_Location>:
#include "GpsLocation.h"
#include "UART.h"
#include "Gps.h"

GPS Location;
Uart Move;
 102:	60 e8       	ldi	r22, 0x80	; 128
 104:	75 e2       	ldi	r23, 0x25	; 37
 106:	82 e3       	ldi	r24, 0x32	; 50
 108:	91 e0       	ldi	r25, 0x01	; 1
 10a:	0e 94 c6 00 	call	0x18c	; 0x18c <_ZN4UartC1E8BaudRate>
 10e:	08 95       	ret

00000110 <main>:
#include "Gps.h"
#include "GpsLocation.h"
int i = 0;

int main(void)
{
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62
 118:	c2 54       	subi	r28, 0x42	; 66
 11a:	d1 40       	sbci	r29, 0x01	; 1
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
	Uart a;
 126:	60 e8       	ldi	r22, 0x80	; 128
 128:	75 e2       	ldi	r23, 0x25	; 37
 12a:	ce 01       	movw	r24, r28
 12c:	01 96       	adiw	r24, 0x01	; 1
 12e:	0e 94 c6 00 	call	0x18c	; 0x18c <_ZN4UartC1E8BaudRate>
	MovedFromLocation test;
 132:	ce 01       	movw	r24, r28
 134:	c3 96       	adiw	r24, 0x33	; 51
 136:	0e 94 67 00 	call	0xce	; 0xce <_ZN17MovedFromLocationC1Ev>
 13a:	ff cf       	rjmp	.-2      	; 0x13a <main+0x2a>

0000013c <_ZN4Uart11setBaudRateE8BaudRate>:
{
	setBaudRate(rate);
}
void Uart::setBaudRate(BaudRate rate)
{
	unsigned int BAUD_PRESCALLER = (((F_CPU / (rate * 16UL))) - 1);
 13c:	cb 01       	movw	r24, r22
 13e:	a0 e0       	ldi	r26, 0x00	; 0
 140:	b0 e0       	ldi	r27, 0x00	; 0
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	aa 1f       	adc	r26, r26
 148:	bb 1f       	adc	r27, r27
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	aa 1f       	adc	r26, r26
 150:	bb 1f       	adc	r27, r27
 152:	9c 01       	movw	r18, r24
 154:	ad 01       	movw	r20, r26
 156:	22 0f       	add	r18, r18
 158:	33 1f       	adc	r19, r19
 15a:	44 1f       	adc	r20, r20
 15c:	55 1f       	adc	r21, r21
 15e:	22 0f       	add	r18, r18
 160:	33 1f       	adc	r19, r19
 162:	44 1f       	adc	r20, r20
 164:	55 1f       	adc	r21, r21
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	74 e2       	ldi	r23, 0x24	; 36
 16a:	84 ef       	ldi	r24, 0xF4	; 244
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 c9 00 	call	0x192	; 0x192 <__udivmodsi4>
 172:	21 50       	subi	r18, 0x01	; 1
 174:	31 09       	sbc	r19, r1
	UBRR0H = (unsigned int)(BAUD_PRESCALLER>>8);
 176:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned int)(BAUD_PRESCALLER);
 17a:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 17e:	88 e1       	ldi	r24, 0x18	; 24
 180:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3<<UCSZ00);
 184:	86 e0       	ldi	r24, 0x06	; 6
 186:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 18a:	08 95       	ret

0000018c <_ZN4UartC1E8BaudRate>:
#include "UART.h"
//namespace using std;

Uart::Uart(BaudRate rate)
{
	setBaudRate(rate);
 18c:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN4Uart11setBaudRateE8BaudRate>
 190:	08 95       	ret

00000192 <__udivmodsi4>:
 192:	a1 e2       	ldi	r26, 0x21	; 33
 194:	1a 2e       	mov	r1, r26
 196:	aa 1b       	sub	r26, r26
 198:	bb 1b       	sub	r27, r27
 19a:	fd 01       	movw	r30, r26
 19c:	0d c0       	rjmp	.+26     	; 0x1b8 <__udivmodsi4_ep>

0000019e <__udivmodsi4_loop>:
 19e:	aa 1f       	adc	r26, r26
 1a0:	bb 1f       	adc	r27, r27
 1a2:	ee 1f       	adc	r30, r30
 1a4:	ff 1f       	adc	r31, r31
 1a6:	a2 17       	cp	r26, r18
 1a8:	b3 07       	cpc	r27, r19
 1aa:	e4 07       	cpc	r30, r20
 1ac:	f5 07       	cpc	r31, r21
 1ae:	20 f0       	brcs	.+8      	; 0x1b8 <__udivmodsi4_ep>
 1b0:	a2 1b       	sub	r26, r18
 1b2:	b3 0b       	sbc	r27, r19
 1b4:	e4 0b       	sbc	r30, r20
 1b6:	f5 0b       	sbc	r31, r21

000001b8 <__udivmodsi4_ep>:
 1b8:	66 1f       	adc	r22, r22
 1ba:	77 1f       	adc	r23, r23
 1bc:	88 1f       	adc	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	1a 94       	dec	r1
 1c2:	69 f7       	brne	.-38     	; 0x19e <__udivmodsi4_loop>
 1c4:	60 95       	com	r22
 1c6:	70 95       	com	r23
 1c8:	80 95       	com	r24
 1ca:	90 95       	com	r25
 1cc:	9b 01       	movw	r18, r22
 1ce:	ac 01       	movw	r20, r24
 1d0:	bd 01       	movw	r22, r26
 1d2:	cf 01       	movw	r24, r30
 1d4:	08 95       	ret

000001d6 <__tablejump2__>:
 1d6:	ee 0f       	add	r30, r30
 1d8:	ff 1f       	adc	r31, r31
 1da:	05 90       	lpm	r0, Z+
 1dc:	f4 91       	lpm	r31, Z
 1de:	e0 2d       	mov	r30, r0
 1e0:	09 94       	ijmp

000001e2 <_exit>:
 1e2:	f8 94       	cli

000001e4 <__stop_program>:
 1e4:	ff cf       	rjmp	.-2      	; 0x1e4 <__stop_program>
